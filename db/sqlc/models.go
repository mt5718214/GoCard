// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0

package db

import (
	"time"

	"github.com/google/uuid"
)

type Comment struct {
	ID      uuid.UUID `json:"id"`
	OwnerID uuid.UUID `json:"owner_id"`
	PostID  uuid.UUID `json:"post_id"`
	// if this field is 0 mean it is the top-level comment
	MainCommentID uuid.UUID `json:"main_comment_id"`
	CreatedAt     time.Time `json:"created_at"`
	Content       string    `json:"content"`
}

type Followship struct {
	ID         uuid.UUID     `json:"id"`
	FollowerID uuid.NullUUID `json:"follower_id"`
	TopicID    uuid.NullUUID `json:"topic_id"`
	CreatedAt  time.Time     `json:"created_at"`
}

type Like struct {
	ID      uuid.UUID     `json:"id"`
	UserID  uuid.NullUUID `json:"user_id"`
	LikedID uuid.NullUUID `json:"liked_id"`
	// 1 is posts, 2 is comment
	Type      interface{} `json:"type"`
	CreatedAt time.Time   `json:"created_at"`
}

type Post struct {
	ID        uuid.UUID `json:"id"`
	OwnerID   uuid.UUID `json:"owner_id"`
	TopicID   uuid.UUID `json:"topic_id"`
	CreatedAt time.Time `json:"created_at"`
	Content   string    `json:"content"`
	Title     string    `json:"title"`
}

type Topic struct {
	ID        uuid.UUID `json:"id"`
	TopicName string    `json:"topic_name"`
	CreatedAt time.Time `json:"created_at"`
}

type User struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
}
